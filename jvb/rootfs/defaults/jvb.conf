{{ $JVB_TCP_PORT := .Env.JVB_TCP_PORT | default "4443" }}
{{ $JVB_TCP_MAPPED_PORT := .Env.JVB_TCP_MAPPED_PORT | default $JVB_TCP_PORT }}
{{ $PUBLIC_URL_DOMAIN := .Env.PUBLIC_URL | default "https://localhost:8443" | trimPrefix "https://" | trimSuffix "/" -}}
{{ $WS_DOMAIN := .Env.JVB_WS_DOMAIN | default $PUBLIC_URL_DOMAIN -}}
{{ $WS_SERVER_ID := .Env.JVB_WS_SERVER_ID | default .Env.LOCAL_ADDRESS -}}

videobridge {
    ep-connection-status {
        # How long we'll wait for an endpoint to *start* sending
        # data before we consider it 'inactive'
        # set it much larger than default (15s) for the case of big meeting
        # with huge lagging time
        first-transfer-timeout=90 seconds

        # How long an endpoint can be 'inactive' before it will
        # be considered disconnected
        max-inactivity-limit=3 seconds

        # How often we check endpoint's connectivity status
        check-interval=1000 milliseconds
    }
    ice {
        udp {
            port = {{ .Env.JVB_PORT }}
        }
        tcp {
            enabled = {{ not .Env.JVB_TCP_HARVESTER_DISABLED }}
            port = {{ .Env.JVB_TCP_PORT }}
{{ if not (eq $JVB_TCP_PORT $JVB_TCP_MAPPED_PORT) }}
            mapped-port = {{ $JVB_TCP_MAPPED_PORT }}
{{ end }}
        }
    }
    apis {
        xmpp-client {
            configs {
                shard {
                    HOSTNAME = "{{ .Env.XMPP_SERVER }}"
                    DOMAIN = "{{ .Env.XMPP_AUTH_DOMAIN }}"
                    USERNAME = "{{ .Env.JVB_AUTH_USER }}"
                    PASSWORD = "{{ .Env.JVB_AUTH_PASSWORD }}"
                    MUC_JIDS = "{{ .Env.JVB_BREWERY_MUC }}@{{ .Env.XMPP_INTERNAL_MUC_DOMAIN }}"
                    MUC_NICKNAME = "{{ .Env.HOSTNAME }}"
                    DISABLE_CERTIFICATE_VERIFICATION = true
                }
            }
        }
    }
    stats {
        enabled = true
        # The interval at which stats are gathered.
        interval = 5 seconds
    }
    websockets {
        enabled = true
        domain = "{{ .Env.XMPP_DOMAIN }}"
        tls = true
        server-id = "{{ .Env.LOCAL_ADDRESS }}"
    }
    http-servers {
        public {
            port = 9090
        }
    }

}

ice4j {
    harvest {
        mapping {
            stun {
{{ if .Env.JVB_STUN_SERVERS }}
                addresses = [ "{{ join "\",\"" (splitList "," .Env.JVB_STUN_SERVERS) }}" ]
{{ end }}
            }
        }
    }
}
